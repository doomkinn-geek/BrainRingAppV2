<Window x:Class="BrainRingAppV2.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BrainRingAppV2.Views"
        xmlns:converters="clr-namespace:BrainRingAppV2.Converters"
        xmlns:viewmodels="clr-namespace:BrainRingAppV2.ViewModels"
        xmlns:controls="clr-namespace:BrainRingAppV2.Controls"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen" WindowState="Maximized"
        Title="{Binding WinTitle}" Height="1000" Width="800">
    <Window.DataContext>
        <viewmodels:MainWindowViewModel></viewmodels:MainWindowViewModel>
    </Window.DataContext>
    <Window.Resources>
        <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="P" Modifiers="Control" Command="{Binding ToggleTestPanelCommand}" />
    </Window.InputBindings>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <!-- Таймер обратного отсчёта -->
        <!-- Верхняя панель для отображения таймера обратного отсчёта -->
        <Border x:Name="countdownBorder" Grid.Column="1" Grid.Row="3" Padding="10" CornerRadius="5" Margin="5" Background="White" BorderBrush="Black" BorderThickness="2" Visibility="Collapsed">
            <Viewbox Stretch="Uniform">
                <TextBlock x:Name="countdownTextBlock" FontSize="5" FontWeight="Bold" 
                    HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding CountdownText}"/>
            </Viewbox>
        </Border>

        <Border x:Name="answerCandidatesBorder" Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" Padding="10" CornerRadius="5" Margin="5" Background="White" BorderBrush="Black" BorderThickness="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Первая команда -->
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Viewbox Grid.Row="0" Stretch="Uniform" VerticalAlignment="Top">
                        <TextBlock Text="1 команда" Margin="5" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                    </Viewbox>
                    <Viewbox Grid.Row="1" Stretch="Uniform">
                        <Border Background="{Binding FirstCandidateViewModel.Background}">
                            <TextBlock Text="{Binding FirstCandidateViewModel.Text}" FontSize="72" FontWeight="Bold" Margin="10" HorizontalAlignment="Center"/>
                        </Border>
                    </Viewbox>
                </Grid>

                <!-- Вторая команда -->
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Viewbox Grid.Row="0" Stretch="Uniform" VerticalAlignment="Top">
                        <TextBlock Text="2 команда" Margin="5"  FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                    </Viewbox>
                    <Viewbox Grid.Row="1" Stretch="Uniform">
                        <Border Background="{Binding SecondCandidateViewModel.Background}">
                            <TextBlock Text="{Binding SecondCandidateViewModel.Text}" FontSize="72" FontWeight="Bold" Margin="10" HorizontalAlignment="Center"/>
                        </Border>
                    </Viewbox>
                </Grid>

                <!-- Третья команда -->
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Viewbox Grid.Row="0" Stretch="Uniform" VerticalAlignment="Top">
                        <TextBlock Text="3 команда" Margin="5"  FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                    </Viewbox>
                    <Viewbox Grid.Row="1" Stretch="Uniform">
                        <Border Background="{Binding ThirdCandidateViewModel.Background}">
                            <TextBlock Text="{Binding ThirdCandidateViewModel.Text}" FontSize="72" FontWeight="Bold" Margin="10" HorizontalAlignment="Center"/>
                        </Border>
                    </Viewbox>
                </Grid>

            </Grid>
        </Border>

        <Border Grid.Column="1" Grid.Row="2" Grid.RowSpan="1" Padding="10" CornerRadius="5" Margin="5" Background="White" BorderBrush="Black" BorderThickness="2">
            <!-- Панель для отображения состояния кнопок -->
            <ItemsControl x:Name="infoButtonsPanel" ItemsSource="{Binding ButtonViewModels}" >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="150" Height="150" Margin="10">
                            <Ellipse Fill="{Binding Background}" Stroke="Black" StrokeThickness="2"/>
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding Text}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2" Foreground="Black" FontWeight="Bold" FontSize="35"/>
                                <TextBlock Text="{Binding PressTime}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2" Foreground="Black" FontWeight="Bold" FontSize="25"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Border>

        <Border Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2" Padding="10" CornerRadius="5" Margin="5" Background="White" BorderBrush="Black" BorderThickness="2">
            <!-- Нижняя панель для отображения ошибок и ввода данных -->
            <StackPanel Orientation="Vertical">
                <!-- Панель для открытия и закрытия порта -->
                <StackPanel Orientation="Horizontal">
                    <ComboBox ItemsSource="{Binding AvailablePorts}"
                  SelectedItem="{Binding SelectedPort}"                  
                  Width="100" Margin="5" />
                    <Button Content="Open Port" Width="80" Command="{Binding OpenPortCommand}" Margin="5 5"/>
                    <Button Content="Close Port" Width="80" Command="{Binding ClosePortCommand}" Margin="5 5"/>
                    <TextBlock Text="Текущая фаза: " Margin="10,0,0,0" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="{Binding StatusText}" Margin="10,0,0,0" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>

                </StackPanel>

                <!-- TextBox для отображения полученных данных -->
                <TextBox Text="{Binding ReceivedData, Mode=TwoWay}" IsReadOnly="True" FontSize="16" Margin="0 10"/>
                <StackPanel x:Name="testPanel" Orientation="Horizontal" Visibility="{Binding IsTestPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button Content=" sec -- " Width="60" Command="{Binding SecondsDecrease}" Margin="5 5"/>
                    <Button Content=" sec ++ " Width="60" Command="{Binding SecondIncrease}" Margin="5 5"/>
                    <Button Content="Parse test data" Width="90" Command="{Binding AddTestDataCommand}" Margin="5 5" />
                    <TextBlock FontSize="20" FontWeight="Bold" Margin="25 5" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding CountdownText}"/>
                </StackPanel>

                <!-- Панель для отображения ошибок -->
                <Border x:Name="errorBorder" Visibility="{Binding ErrorMessage, Converter={StaticResource StringToVisibilityConverter}}" Background="Red" Opacity="0.8" CornerRadius="10">
                    <TextBlock x:Name="errorTextBlock" Text="{Binding ErrorMessage}" Foreground="White" Margin="10" />
                </Border>
            </StackPanel>
        </Border>
        <Border x:Name="countdownTimerBorder" Grid.Column="1" Grid.Row="0" Padding="10" CornerRadius="5" Margin="5" Background="White" BorderBrush="Black" BorderThickness="2">
            <controls:CountdownTimerControl x:Name="countdownTimerControl" RemainingSeconds="{Binding Seconds, Mode=TwoWay}" />
        </Border>
    </Grid>
</Window>
